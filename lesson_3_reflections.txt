When would you want to use a remote repository rather than keeping all your work
local?

   You would want to use a remote repository if you had multiple people
   working on the same project, that way you all wouldn't have to use
   the same machine(computer) to commit changes. Also, even if you 
   are one person you will have acess to and can make changes to 
   the files in your remote repisitory without having to worry about
   having your computer and/or the appropriate files present.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    your remote repository might have changes other team members have 
    made that you don't know about or aren't ready to add to your local
    version yet. They also may have added or removed parts of the code
    that would conflict with what you are currently working on.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks: an implementation of cloning a repository, but only used
    on github. This is useful when you want to clone an existing
    repo on github, as this can save you some extra steps. Also,
    you might not have the ability to change the files (ie no write 
    permissions) so cloning directly wouldn't work in that case.

    Clones: Clones are copies of an existing repository. you might use 
    this to copy a repository from somewhere else on your on computer, 
    or to copy an exisitng repository from somewhere else, assuming you
    would have write permissions.

    Branches: A segment or "branch" of commit history for a repository.
    Containes comments and direct access to all commits made in this
    segment of the repo and can be merged with other branches. You might 
    use this to add and test a new feature without breaking or adding 
    bugs to code you already know works.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If you were ever in a place that you would not be able to connect
    to the internet, like on a plane for example, but still 
    wanted to know what your remote looked like in terms of 
    files and commits, you could keep this on the local.
    you could also perform the same actions as git pull witout being
    able to connect to the remote by using the fetch and merge 
    commands, then push once you are able to connect.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    To collaborate without using git or github, you might have to 
    constantly send files back and forth. It might be harder to track
    changes made by different people on different files. It also might
    be difficult to revert and merge changes made by one person or 
    multiple people.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Though making changes in a new branch can add complexity
    to your local git and your remote github operations, in
    most cases it is probably the better choice. Creating a branch
    allows you to test new ideas and features, or allow you to work
    in parallel without breaking or causing bugs in code you know 
    already works.
